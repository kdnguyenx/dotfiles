#!/usr/bin/bash
# install essential tools for my linux development environment
# vim: ft=bash
# -----
set -e

echo '[-] checking secure boot state [-]'
if [[ "$(mokutil --sb-state)" != *"SecureBoot enabled"* ]]; then
  echo "could not determine the secure boot state."
  exit 1
fi

echo '[-] installing prerequisite packages [-]'
sudo dnf upgrade -y
sudo dnf install -y curl wget zip zsh git coreutils gcc clang cmake make ninja-build
sudo dnf install -y watch ncdu autoconf automake parallel vim tmux fzf ripgrep jq
sudo dnf install -y tree htop btop pdfgrep tldr hyperfine procs

echo '[-] enabling rpmfusion [-]'
sudo dnf install -y \
  https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
sudo dnf install -y \
  https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

function linking() {
  ln -sfn $(pwd)/.zshrc ~/.zshrc
  ln -sfn $(pwd)/.zshenv ~/.zshenv
  ln -sfn $(pwd)/.tmux.conf ~/.tmux.conf
  ln -sfn $(pwd)/.psqlrc ~/.psqlrc
  ln -sfn $(pwd)/.vimrc ~/.vimrc
  ln -sfn $(pwd)/.ideavimrc ~/.ideavimrc

  mkdir -p ${XDG_CONFIG_HOME:=~/.config}
  ln -sfn $(pwd)/sway $XDG_CONFIG_HOME/sway
  ln -sfn $(pwd)/waybar $XDG_CONFIG_HOME/waybar

  ln -sfn $(pwd)/.gitignore ~/.gitignore
  git config --global core.excludesFile '~/.gitignore'

  mkdir -p $XDG_CONFIG_HOME/gtk-3.0
  cp $(pwd)/templates/settings.ini $XDG_CONFIG_HOME/gtk-3.0/settings.ini

  ln -sfn $(pwd)/MangoHud $XDG_CONFIG_HOME/MangoHud
}
echo '[-] linking dotfiles [-]'
linking

echo '[-] creating essential directories [-]'
mkdir -p ~/.local/bin
mkdir -p ~/personal
mkdir -p ~/repos
mkdir -p ~/opensource
touch ~/.profile

echo '[-] installing window manager and essential packages [-]'
sudo dnf install -y sway swaylock dunst thunar blueman grim slurp xdg-desktop-portal xdg-desktop-portal-wlr
sudo dnf install -y alacritty network-manager-applet pavucontrol gammastep gnupg2 wl-clipboard
sudo dnf install -y ibus ibus-wayland waybar rofi-wayland elementary-icon-theme lightdm-gtk-greeter-settings

echo '[-] installing enhanced cli tools [-]'
sudo dnf install -y tree fastfetch polkit htop btop duf pdfgrep tldr hyperfine procs

echo '[-] downloading git-prompt.sh script [-]'
mkdir -p ~/.zsh/plugins/git/
curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh \
  -o ~/.zsh/plugins/git/git-prompt.sh

target_dir=~/.zsh/zsh-autosuggestions
if [ ! -d "$target_dir" ] ; then
  echo '[-] cloning zsh-autosuggestions [-]'
  git clone https://github.com/zsh-users/zsh-autosuggestions $target_dir
fi

echo '[-] downloading vim plugin manager [-]'
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

target_dir=~/opensource/ibus-bamboo
if [ ! -d "$target_dir" ] ; then
  echo '[-] building ibus-bamboo [-]'
  sudo dnf install -y ibus make go libX11-devel libXtst-devel gtk3-devel
  git clone https://github.com/BambooEngine/ibus-bamboo.git $target_dir
  cd $target_dir
  sudo make install PREFIX=/usr
fi

target_dir=$XDG_DATA_HOME/fonts
if [ ! -d "$target_dir" ] ; then
  echo '[-] installing favourite font [-]'
  wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/Hack.zip
  mkdir -p $target_dir
  unzip Hack.zip -d $target_dir
  rm -f Hack.zip
  fc-cache -f -v
fi

if lspci | grep -E "VGA|3D" | grep -iq "AMD"; then
  echo '[-] installing steam essential packages [-]'
  sudo dnf install -y steam discord rocm-smi mangohud gamescope
  echo 'remember to add `mangohud %command%` to steam launch options'
fi

current_shell=$(echo $SHELL)
if [ "$current_shell" != "/usr/bin/zsh" ]; then
  echo '[-] change default shell to zsh [-]'
  chsh -s $(which zsh)
  echo '[-] device ready, restart your computer. [-]'
fi
