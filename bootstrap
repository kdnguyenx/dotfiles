#!/usr/bin/bash
# install essential tools for my linux development environment
# vim: ft=bash
# -----
set -e

if [[ "$(mokutil --sb-state)" != *"SecureBoot enabled"* ]]; then
  echo "could not determine the secure boot state."
  exit 1
fi

echo '[-] installing prerequisite packages [-]'
sudo dnf upgrade -y
sudo dnf install -y curl wget zip zsh git coreutils watch ncdu clang cmake ninja-build

echo '[-] installing window manager [-]'
sudo dnf install -y i3 feh picom alacritty network-manager-applet pavucontrol redshift
sudo dnf install -y xautolock xbacklight xdotool xclip maim slop mangohud gnupg2

function linking() {
  ln -sfn $(pwd)/.zshrc ~/.zshrc
  ln -sfn $(pwd)/.zshenv ~/.zshenv
  ln -sfn $(pwd)/.tmux.conf ~/.tmux.conf
  ln -sfn $(pwd)/.psqlrc ~/.psqlrc
  ln -sfn $(pwd)/.vimrc ~/.vimrc
  ln -sfn $(pwd)/.ideavimrc ~/.ideavimrc

  mkdir -p ${XDG_CONFIG_HOME:=~/.config}
  ln -sfn $(pwd)/i3 $XDG_CONFIG_HOME/i3
  ln -sfn $(pwd)/i3status $XDG_CONFIG_HOME/i3status
  ln -sfn $(pwd)/alacritty $XDG_CONFIG_HOME/alacritty

  mkdir -p $XDG_CONFIG_HOME/gtk-3.0
  cp $(pwd)/templates/settings.ini $XDG_CONFIG_HOME/gtk-3.0/settings.ini
  ln -sfn $(pwd)/.Xresources ~/.Xresources
  ln -sfn $(pwd)/MangoHud $XDG_CONFIG_HOME/MangoHud

  ln -sfn $(pwd)/.gitignore ~/.gitignore
  git config --global core.excludesFile '~/.gitignore'
}
echo '[-] linking dotfiles [-]'
linking

echo '[-] installing extended packages [-]'
sudo dnf install -y parallel vim tmux fzf ripgrep jq httpie
mkdir -p ~/.local/bin

echo '[-] downloading git-prompt.sh script [-]'
mkdir -p ~/.zsh/plugins/git/
curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -o ~/.zsh/plugins/git/git-prompt.sh

echo '[-] downloading vim plugin manager [-]'
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
      https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

target_dir=~/.zsh/zsh-autosuggestions
if [ ! -d "$target_dir" ] ; then
  echo '[-] cloning zsh-autosuggestions [-]'
  git clone https://github.com/zsh-users/zsh-autosuggestions $target_dir
fi

echo '[-] creating essential directories [-]'
mkdir -p ~/personal
mkdir -p ~/repos
mkdir -p ~/opensource

target_dir=~/.local/share/fonts
if [ ! -d "$target_dir" ] ; then
  echo '[-] installing favourite fonts [-]'
  wget https://github.com/canonical/Ubuntu-Sans-fonts/releases/download/v1.006/UbuntuSans-fonts-1.006.zip
  wget https://github.com/canonical/Ubuntu-Sans-Mono-fonts/releases/download/v1.006/UbuntuSansMono-fonts-1.006.zip
  mkdir -p $target_dir
  unzip UbuntuSans-fonts-1.006.zip -d $target_dir
  unzip UbuntuSansMono-fonts-1.006.zip -d $target_dir
  rm -f UbuntuSans-fonts-1.006.zip
  rm -f UbuntuSansMono-fonts-1.006.zip
  fc-cache -f -v
fi

target_dir=~/opensource/ibus-bamboo
if [ ! -d "$target_dir" ] ; then
  echo '[-] building ibus-bamboo [-]'
  sudo dnf install -y ibus make go libX11-devel libXtst-devel gtk3-devel
  git clone https://github.com/BambooEngine/ibus-bamboo.git $target_dir
  cd $target_dir
  sudo make install PREFIX=/usr
fi

if lspci | grep -E "VGA|3D" | grep -iq "AMD"; then
  echo '[-] installing steam essential packages [-]'
fi

current_shell=$(echo $SHELL)
if [ "$current_shell" != "/usr/bin/zsh" ]; then
  echo '[-] change default shell to zsh [-]'
  chsh -s $(which zsh)
fi

echo '[-] device ready, restart your computer. [-]'
